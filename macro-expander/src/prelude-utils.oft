(module macro-expander/prelude-utils
  [get-prelude-exports])

(import macro-expander/fs
  walk-dir-files)
(import ministd/internal/oftb
  read-file)

(intrinsics:defn get-prelude-exports (prelude-pkg-path)
  (def prelude-srcs-path (string-append prelude-pkg-path "/src/internal/prelude"))
  (def src-path-len (+ (string-length prelude-pkg-path) 4))

  (def metadata (read-file (string-append prelude-pkg-path "/package.oftd")))
  (def package-name (car (expect
    (assoc 'name metadata)
    "Package is missing a name")))

  (intrinsics:defn to-import-name (path)
    (def l (string-length path))
    (def path (string-slice src-path-len (- l 4) path))
    (symbol<-string (string-append
      (string<-symbol package-name)
      path)))
    
  (def prelude-files (walk-dir-files prelude-srcs-path))
  (def exports (map
    (fn (m) (map-pair to-import-name exports-of m))
    prelude-files))

  (pair package-name exports))

(intrinsics:defn exports-of (src)
  (car (cdr (cdr (car src)))))
