(module main
  [main])

(import macro-expander
  [expand-modules])
(import macro-expander/compiler
  [modules->flat-anf])
(import macro-expander/packages
  [load-packages traverse-modules])
(import macro-expander/serialize
  [serialize-flatanf])

(intrinsics:defn main (args)
  (if (not (= (length args) 3))
    (panic "usage: oftb-macro-expander std-path package-dir binary-name"))
  (intrinsics:def std-path    (nth 0 args))
  (intrinsics:def package-dir (nth 1 args))
  (intrinsics:def binary-name (nth 2 args))

  (intrinsics:def modules (load-packages std-path package-dir binary-name))
  (intrinsics:def modules (must (traverse-modules modules 'main)))
  (intrinsics:def modules (expand-modules modules))

  (intrinsics:def flatanf (modules->flat-anf modules))
  (write-bytes (serialize-flatanf flatanf)))
