(module ministd/monad/state
  [bind eval-state exec-state pure run-state state-bind state-modify state-pure
   state-read state-write])
  
(intrinsics:defn eval-state (state st)
  (fst (st state)))
  
(intrinsics:defn exec-state (state st)
  (snd (st state)))
  
(intrinsics:defn run-state (state st)
  (st state))

(intrinsics:defn state-pure (value)
  \(pair value $))

(intrinsics:defn state-bind (f st)
  (fn (state)
    (def tmp (st state))
    ((f (fst tmp)) (snd tmp))))

(intrinsics:defn state-modify (f)
  \(pair nil (f $)))
  
(intrinsics:defn state-read ()
  \(pair $ $))
  
(intrinsics:defn state-write (new-state)
  \(pair nil new-state))

(def bind state-bind)
(def pure state-pure)
